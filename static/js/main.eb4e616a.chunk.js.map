{"version":3,"sources":["components/Header/index.js","utils/API.js","components/Table/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","style","backgroundColor","marginBottom","color","axios","get","Table","state","results","searchNFilter","componentDidMount","searchRoster","API","then","res","data","sort","n","p","name","last","setState","catch","err","console","log","handleSort","e","preventDefault","alphaOrder","reverse","handleInputChange","target","value","height","paddingTop","placeholder","onChange","this","onClick","type","data-toggle","aria-haspopup","aria-expanded","filter","result","first","toLowerCase","includes","toString","map","src","picture","medium","alt","email","phone","uuid","Component","Footer","marginTop","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAaeA,MAXf,WACI,OACI,iCACI,sBAAKC,UAAU,YAAYC,MAAO,CAACC,gBAAiB,UAAWC,aAAc,GAA7E,UACA,oBAAIF,MAAO,CAACG,MAAO,SAAnB,kCACA,oBAAIH,MAAO,CAACG,MAAO,SAAnB,iC,iDCHG,EACH,WACJ,OAAOC,IAAMC,IAAI,kD,iBC+FVC,E,4MA/FXC,MAAQ,CACJC,QAAS,GACTC,cAAe,I,EAInBC,kBAAoB,WAChB,EAAKC,gB,EAITA,aAAe,WACXC,IACCC,MAAK,SAACC,GACH,IAAIN,EAAUM,EAAIC,KAAKP,QAAQQ,MAAK,SAACC,EAAEC,GACnC,OAAID,EAAEE,KAAKC,KAAOF,EAAEC,KAAKC,MACb,EAED,KAGf,OAAO,EAAKC,SAAS,CACjBb,QAASA,EACTC,cAAe,QAGtBa,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAI9BG,WAAa,SAAAC,GACTA,EAAEC,iBAEF,IAAIC,EAAa,EAAKtB,MAAMC,QAAQsB,UAEhC,EAAKvB,MAAMC,QACX,EAAKa,SAAS,CACVb,QAASqB,IAGbL,QAAQC,IAAR,wB,EAKRM,kBAAoB,SAAAJ,GAChBA,EAAEC,iBACF,EAAKP,SAAS,CACVb,QAAS,EAAKD,MAAMC,QACpBC,cAAekB,EAAEK,OAAOC,S,4CAKhC,WAAW,IAAD,OACN,OACI,gCACI,qBAAKjC,MAAO,CAACC,gBAAgB,UAAWiC,OAAQ,GAAIC,WAAW,IAA/D,SACI,uBAAOC,YAAY,iBAAiBC,SAAUC,KAAKP,sBAEvD,wBAAOhC,UAAU,kCAAjB,UACI,uBAAOA,UAAU,aAAjB,SACI,+BACI,uCACA,sCAAQ,yBAAQwC,QAASD,KAAKZ,WAAYc,KAAK,SAASzC,UAAU,kCAAkC0C,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,QAAtJ,UACJ,sBAAM5C,UAAU,UAChB,sBAAMA,UAAU,UAAhB,mCAGJ,uCACA,mDAGR,gCACGuC,KAAK/B,MAAMC,QACXoC,QAAO,SAAAC,GACJ,MAAQ,UAAIA,EAAO1B,KAAK2B,MAAhB,YAAyBD,EAAO1B,KAAKC,MAAQ2B,cAAcC,SAAS,EAAKzC,MAAME,cAAcwC,WAAWF,kBACjHG,KAAI,SAAAL,GACL,OACI,+BACI,6BAAI,qBAAKM,IAAKN,EAAOO,QAAQC,OAAQC,IAAKT,EAAO1B,KAAK2B,MAAQ,IAAMD,EAAO1B,KAAKC,SAChF,+BAAKyB,EAAO1B,KAAK2B,MAAjB,IAAyBD,EAAO1B,KAAKC,QACrC,6BAAKyB,EAAOU,QACZ,6BAAKV,EAAOW,UAJPC,sB,GAhFjBC,aCKLC,MARf,WACI,OACI,qBAAK5D,UAAU,SAAQC,MAAO,CAACE,aAAc,GAAI0D,UAAU,IAA3D,SACI,sBAAM7D,UAAU,yBAAhB,+CCWG8D,MAVf,WACE,OACE,sBAAK9D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCS+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnD,MAAK,YAAkD,IAA/CoD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eb4e616a.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n    return (\n        <header>\n            <div className='jumbotron' style={{backgroundColor: '#939597', marginBottom: 0}}>\n            <h1 style={{color: 'white' }}>Employee Directory!!</h1>\n            <h4 style={{color: 'white'}}>Search! Sort!</h4>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","// Dependencies\nimport axios from 'axios';\n\n// Random User Generator \nexport default {\n    roster: function() {\n        return axios.get('https://randomuser.me/api/?results=100&nat=us')\n    }\n};","// Dependencies\nimport React, { Component } from 'react';\nimport API from '../../utils/API';\nimport uuid from 'react-uuid';\n\nclass Table extends Component {\n    state = {\n        results: [],\n        searchNFilter: []\n    }\n\n    // After component loads, run searchRoster\n    componentDidMount = () => {\n        this.searchRoster();\n    }  \n\n    // Calls API, gets employess and displays in alphabetical order on load\n    searchRoster = () => {\n        API.roster()\n        .then((res) => {\n            let results = res.data.results.sort((n,p) => {\n                if (n.name.last < p.name.last) {\n                    return -1;\n                } else {\n                    return 1;\n                }\n            })\n            return this.setState({\n                results: results,\n                searchNFilter: ''\n            })\n        })\n        .catch(err => console.log(err));\n    }\n\n    // Sorts employees by last name\n    handleSort = e => {\n        e.preventDefault();\n        \n        let alphaOrder = this.state.results.reverse();\n\n        if (this.state.results) {\n            this.setState({\n                results: alphaOrder\n            })\n        } else {\n            console.log(`There's no roster!!`)\n        }\n    }\n\n    // Takes value of input\n    handleInputChange = e => {\n        e.preventDefault();\n        this.setState({\n            results: this.state.results,\n            searchNFilter: e.target.value\n         })\n    }\n\n\n    render () {\n        return (\n            <div>\n                <nav style={{backgroundColor:'#F5DF4D', height: 50, paddingTop:10}}>\n                    <input placeholder='Search name...' onChange={this.handleInputChange}/>\n                </nav>  \n                <table className='table table-striped table-hover'>\n                    <thead className='thead-dark'>\n                        <tr>\n                            <th>Image</th>\n                            <th>Name<button onClick={this.handleSort} type=\"button\" className=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <span className=\"caret\"></span>\n                                <span className=\"sr-only\">Toggle Dropdown</span>\n                                </button>\n                            </th>\n                            <th>Email</th>\n                            <th>Phone Number</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.results\n                      .filter(result => {\n                          return ((`${result.name.first} ${result.name.last}`).toLowerCase().includes(this.state.searchNFilter.toString().toLowerCase()))\n                      }).map(result => {\n                        return (\n                            <tr key={uuid()}>\n                                <td><img src={result.picture.medium} alt={result.name.first + ' ' + result.name.last}/></td>\n                                <td>{result.name.first} {result.name.last}</td>\n                                <td>{result.email}</td>\n                                <td>{result.phone}</td>\n                            </tr>\n                        )\n                    })\n                    }\n                    </tbody>\n                </table>\n            </div>       \n        );\n    }\n}\n\nexport default Table;","import React from 'react';\n\nfunction Footer () {\n    return (\n        <div className=\"footer\"style={{marginBottom: 50, marginTop:50}}>\n            <span className=\"text-muted text-center\">Employee Directory!! &copy; 2021</span>\n        </div>\n    )\n}\n\nexport default Footer;","// Dependencies\nimport './App.css';\nimport Header from './components/Header';\nimport Table from './components/Table';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Table/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}